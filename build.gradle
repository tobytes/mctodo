buildscript
{
    // Repositories and plugins used by this buildscript. For internal Gradle use only.
    repositories
    {
        mavenCentral()
        maven
        {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven
        {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies
    {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
    }
}

// Applies the custom Gradle plugin Forge uses, for Forge-specific tasks
apply plugin: 'forge'

version = "1.7.10-0.0.1"
group   = "com.tobyte.todo"
archivesBaseName = "ToDo"

minecraft
{
    version = "1.7.10-10.13.3.1403-1.7.10"
    runDir  = "debug"
}

jar
{
    // Sets the output directory of the mod's jar file
    destinationDir = file 'output'
}

compileJava
{
    // Enforces use of Java 1.7 language level
    sourceCompatibility = "1.7"
    targetCompatibility = "1.7"
}

idea
{
    module
    {
        // Fixes issues with debugging in IntelliJ
        inheritOutputDirs = true
    }
}

dependencies
{
    // you may put jars on which you depend on in ./libs
    // or you may define them like so..
    //compile "some.group:artifact:version:classifier"
    //compile "some.group:artifact:version"
      
    // real examples
    //compile 'com.mod-buildcraft:buildcraft:6.0.8:dev'  // adds buildcraft to the dev env
    //compile 'com.googlecode.efficient-java-matrix-library:ejml:0.24' // adds ejml to the dev env

    // for more info...
    // http://www.gradle.org/docs/current/userguide/artifact_dependencies_tutorial.html
    // http://www.gradle.org/docs/current/userguide/dependency_management.html
}

processResources
{
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs)
	{
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs)
	{
        exclude 'mcmod.info'
    }
}